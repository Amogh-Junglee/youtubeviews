// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "youtubeviews/models"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDbRepo is a mock of DbRepo interface.
type MockDbRepo struct {
	ctrl     *gomock.Controller
	recorder *MockDbRepoMockRecorder
}

// MockDbRepoMockRecorder is the mock recorder for MockDbRepo.
type MockDbRepoMockRecorder struct {
	mock *MockDbRepo
}

// NewMockDbRepo creates a new mock instance.
func NewMockDbRepo(ctrl *gomock.Controller) *MockDbRepo {
	mock := &MockDbRepo{ctrl: ctrl}
	mock.recorder = &MockDbRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDbRepo) EXPECT() *MockDbRepoMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockDbRepo) Get(ctx context.Context, req models.ViewCountPayload) (models.ViewCountResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, req)
	ret0, _ := ret[0].(models.ViewCountResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockDbRepoMockRecorder) Get(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockDbRepo)(nil).Get), ctx, req)
}

// GetTopVideos mocks base method.
func (m *MockDbRepo) GetTopVideos(ctx context.Context, req models.GetTopVideosPayload) (models.GetTopVideosResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTopVideos", ctx, req)
	ret0, _ := ret[0].(models.GetTopVideosResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTopVideos indicates an expected call of GetTopVideos.
func (mr *MockDbRepoMockRecorder) GetTopVideos(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTopVideos", reflect.TypeOf((*MockDbRepo)(nil).GetTopVideos), ctx, req)
}

// Increment mocks base method.
func (m *MockDbRepo) Increment(ctx context.Context, req models.IncrementPayload) (models.IncrementViewResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Increment", ctx, req)
	ret0, _ := ret[0].(models.IncrementViewResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Increment indicates an expected call of Increment.
func (mr *MockDbRepoMockRecorder) Increment(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Increment", reflect.TypeOf((*MockDbRepo)(nil).Increment), ctx, req)
}
